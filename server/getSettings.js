import {Provider} from 'nconf'
import _ from 'lodash'

const defaults = {
    serverUrl: 'http://localhost:8086',
    apiBaseUrl: 'http://localhost:8000',
    publicUrl: null,
    helsinkiAuthId: 'this-is-mock' || null,
    helsinkiAuthSecret: 'this-is-mock' || null,
    helsinkiTargetApp: 'linkedevents-ui',
    jwtAudience: 'linkedevents-ui',
    jwtKey: null,
    sessionSecret: null,
    dev: true,
    serverRendering: false,
    cold: false,
    bundleSrc: null, // Usually generated by the boot-time compilation process
};

const requiredKeys = ["helsinkiAuthId", "helsinkiAuthSecret", "jwtKey", "sessionSecret"]

export default function getOptions() {
    // Check configs
    const nconf = new Provider()
    nconf.argv()
    nconf.env()
    nconf.file({file: './kk.config'})
    nconf.defaults(_.clone(defaults))

    const settings = _.pick(nconf.get(), Object.keys(defaults))
    const {hostname, port} = require('url').parse(settings.serverUrl)
    settings.hostname = hostname
    settings.port = port
    settings.publicUrl = settings.publicUrl || settings.serverUrl

    if (settings.dev) {
        if (!settings.sessionSecret) {
            settings.sessionSecret = 'Don\'t Panic.'
        }
        if (!settings.jwtKey) {
            settings.jwtKey = 'linkedevents-ui'
        }
    }

    const missingKeys = requiredKeys.filter((key) => !settings[key])
    if (missingKeys.length) {
        throw new Error("These configuration values are required but are currently missing: " + missingKeys.join(", "))
    }
    return settings
}
